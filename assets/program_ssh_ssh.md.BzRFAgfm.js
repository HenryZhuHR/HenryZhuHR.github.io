import{_ as s,c as i,o as a,a2 as e}from"./chunks/framework.bdxXucLJ.js";const t="/assets/github-addsshkey.k24940uo.png",h="/assets/github-clone.Bh2Gd5Xb.png",y=JSON.parse('{"title":"少输密码多摸鱼","description":"","frontmatter":{"title":"少输密码多摸鱼","subtitle":"SSH 使用指南","author":"HenryZhu","date":"2023-08-26T00:00:00.000Z"},"headers":[],"relativePath":"program/ssh/ssh.md","filePath":"program/ssh/ssh.md","lastUpdated":1715326410000}'),l={name:"program/ssh/ssh.md"},n=e(`<h1 id="ssh" tabindex="-1">SSH <a class="header-anchor" href="#ssh" aria-label="Permalink to &quot;SSH&quot;">​</a></h1><p>ssh 是一种网络协议，用于计算机之间的加密登录。例如：</p><ul><li>本地登录远程服务器</li><li>本地登录 Github，进行代码的克隆和推送</li></ul><h2 id="生成-ssh-密钥" tabindex="-1">生成 SSH 密钥 <a class="header-anchor" href="#生成-ssh-密钥" aria-label="Permalink to &quot;生成 SSH 密钥&quot;">​</a></h2><p>生成 SSH 密钥的命令如下：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">filenam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">commen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/id_rsa_mobilecar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mobilecar&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/id_rsa_mobilecar_core</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mobilecar_core&quot;</span></span></code></pre></div><p>其他可选参数</p><ul><li><p><code>-f</code> 指定生成的密钥文件。默认生成的密钥文件为 <code>~/.ssh/id_rsa</code>。</p><p>如果有多个服务器可以设置不同的名称加以区分。例如设置一个名为 <code>~/.ssh/id_rsa_github</code> 的密钥专为 Github 使用: <code>-f ~/.ssh/id_rsa_github</code></p></li><li><p><code>-b</code> 指定密钥长度，默认为 2048，通过 <code>-b 4096</code> 可以设置为 4096</p></li><li><p><code>-t</code> 指定密钥类型，默认为 rsa，通过 <code>-t dsa</code> 可以设置为 dsa</p></li><li><p><code>-C</code> 添加注释信息，一般为邮箱地址，例如 <code>-C &quot;abc@gmail.com&quot;</code></p></li></ul><p>运行后会提示输入密钥文件的保存路径，直接（一路）回车即可，会在默认路径 <code>~/.ssh/</code> 下生成密钥文件：</p><ul><li><code>id_rsa</code> 为私钥</li><li><code>id_rsa.pub</code> 为公钥</li></ul><h2 id="ssh-密钥的作用" tabindex="-1">SSH 密钥的作用 <a class="header-anchor" href="#ssh-密钥的作用" aria-label="Permalink to &quot;SSH 密钥的作用&quot;">​</a></h2><h3 id="使用-ssh-密钥登录远程服务器" tabindex="-1">使用 SSH 密钥登录远程服务器 <a class="header-anchor" href="#使用-ssh-密钥登录远程服务器" aria-label="Permalink to &quot;使用 SSH 密钥登录远程服务器&quot;">​</a></h3><p>将「本地公钥」 <code>id_rsa.pub</code> 添加到远程服务器的 <code>~/.ssh/authorized_keys</code> 文件中，即可使用私钥登录远程服务器</p><p>在登陆的时候，会自动将「本地私钥」和「服务器公钥」进行匹配，如果匹配成功，则可以免密登录。这在使用 VSCode 远程开发的时候非常有用，可以免去每次输入密码的麻烦。 (关于 VScode 远程开发可以参考 <a href="https://code.visualstudio.com/docs/remote/ssh" target="_blank" rel="noreferrer"><em>&quot;Remote Development using SSH&quot;</em></a>)</p><p>使用 <code>ssh-copy-id</code> 命令可以将「本地公钥」传输协议到远程服务器的「公钥认证」文件中，例如：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-copy-id</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">identity_fil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">hostnam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li><code>-i</code> 指定「本地公钥」的路径，例如 <code>-i ~/.ssh/id_rsa.pub</code></li><li><code>-p</code> 如果远程服务器的 SSH 端口不是默认的 22 端口，可以通过 <code>-p &lt;port&gt;</code> 指定端口</li></ul><blockquote><p>也可以手动将「本地公钥」复制到远程服务器的 <code>~/.ssh/authorized_keys</code> 文件中 (如果不存在，需要手动创建) 。但是推荐使用 <code>ssh-copy-id</code> 命令，因为该命令会自动创建 <code>~/.ssh/</code> 目录和 <code>~/.ssh/authorized_keys</code> 文件，并且会自动设置权限。</p></blockquote><p>使用 SSH 连接远程服务器的时候，需要远程服务器安装 SSH 服务，一般来说 Linux 服务器会默认安装 <code>openssh-server</code> ，如果没有安装，对于 Ubuntu ，可以使用 <code>sudo apt install openssh-server</code> 安装。</p><h3 id="使用-ssh-密钥登录-github" tabindex="-1">使用 SSH 密钥登录 Github <a class="header-anchor" href="#使用-ssh-密钥登录-github" aria-label="Permalink to &quot;使用 SSH 密钥登录 Github&quot;">​</a></h3><blockquote><p><a href="https://huggingface.co" target="_blank" rel="noreferrer">Hugging Face</a> 也是如此操作添加</p></blockquote><p>将 <code>id_rsa.pub</code> 文件中的内容复制到 Github 的 SSH 密钥中，在 Github 中 <code>Settings -&gt; SSH and GPG keys -&gt; New SSH key</code> 中添加，命名时候可以自定义，建议和设备绑定，并且加上密钥名称，例如 <code>Ubuntu22.04-id_rsa</code></p><p><img src="`+t+`" alt="公钥添加到 Github"></p><p>添加之后，clone 项目采用 ssh 的方式，会自动与 Github 建立连接，Github 会将公钥和「<strong>当前设备中</strong>」的私钥进行匹配，如果匹配成功，则可以免密操作。完成后运行如下命令，测试</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@hf.co</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # for verifying Hugging Face</span></span></code></pre></div><blockquote><p>注意：如果是多设备，需要将每个设备的公钥都添加到 Github 中，这样才能实现多设备免密操作。每个设备生成的私钥都不一样，当然了，把密钥复制到其他设备也是可以的，但是这样就失去了 SSH 密钥的意义了。 <img src="`+h+`" alt="clone 项目采用 ssh 的方式"></p></blockquote><p>HTTPS 和 SSH clone 方式的区别：</p><ul><li>HTTPS 可以任意用户克隆，SSH 只能克隆自己（有权限的）的项目，并且需要配置 SSH 密钥</li><li>在推送代码的时候，HTTPS 需要输入用户名和密码，SSH 不需要输入用户名和密码</li></ul><h2 id="密钥管理" tabindex="-1">密钥管理 <a class="header-anchor" href="#密钥管理" aria-label="Permalink to &quot;密钥管理&quot;">​</a></h2><p>可以针对不同的服务器配置多个密钥，需要编辑 <code>~/.ssh/config</code> 文件，如果没有则手动创建。例如：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  HostName</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.1.123</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  Port</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 22</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  User</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ubuntu</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ForwardAgent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  PreferredAuthentications</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> publickey</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  IdentityFile</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/id_rsa</span></span></code></pre></div><ul><li><code>Host</code> 指定服务器的名称，例如 <code>my_server</code>，也可以就是 IP 地址，<strong>登录的时候使用该名称</strong></li><li><code>HostName</code> 指定服务器的 IP 地址，例如</li><li><code>Port</code> 指定服务器的 SSH 端口，如果是默认端口 <code>22</code> 可以省略</li><li><code>User</code> 指定登录服务器的用户名，例如 <code>ubuntu</code></li><li><code>ForwardAgent</code> 指定是否转发本地的 SSH Agent，例如 <code>yes</code></li><li><code>PreferredAuthentications</code> 指定登录服务器优先的认证方式，例如 <code>publickey</code>, <code>password</code>, <code>keyboard-interactive</code></li><li><code>IdentityFile</code> 指定私钥的路径，例如 <code>IdentityFile ~/.ssh/id_rsa_github</code></li></ul><p>如果有多个服务器，可以添加多个 Host，并且指定不同的私钥加以认证区分</p><p>随后，可以通过 Host 的名称登录服务器，例如：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_server:~/file.txt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/file.txt</span></span></code></pre></div><blockquote><p>注意，这时候如果采用 <code>ssh &lt;user&gt;@&lt;ip&gt;</code> 的方式登录，还是需要输入密码的，因为没有指定私钥</p></blockquote><p>采用这种方式也可以配置多个 github/gitee/HuggingFace 账户：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Github</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  HostName</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  User</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Your_Github_Nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  AddKeysToAgent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  UseKeychain</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  IdentityFile</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/id_rsa_github</span></span></code></pre></div><p>连接测试的时候需要改成</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@Github</span></span></code></pre></div>`,40),p=[n];function d(k,o,c,r,g,F){return a(),i("div",null,p)}const b=s(l,[["render",d]]);export{y as __pageData,b as default};
