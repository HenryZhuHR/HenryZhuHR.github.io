import{_ as n,o as s,c as a,b as e}from"./app.32df9e2f.js";const p={},o=e(`<h1 id="\u5DE6\u503C\u5F15\u7528\u3001\u53F3\u503C\u5F15\u7528\u3001\u79FB\u52A8\u8BED\u4E49\u3001\u5B8C\u7F8E\u8F6C\u53D1" tabindex="-1"><a class="header-anchor" href="#\u5DE6\u503C\u5F15\u7528\u3001\u53F3\u503C\u5F15\u7528\u3001\u79FB\u52A8\u8BED\u4E49\u3001\u5B8C\u7F8E\u8F6C\u53D1" aria-hidden="true">#</a> \u5DE6\u503C\u5F15\u7528\u3001\u53F3\u503C\u5F15\u7528\u3001\u79FB\u52A8\u8BED\u4E49\u3001\u5B8C\u7F8E\u8F6C\u53D1</h1><h2 id="\u5DE6\u503C\u548C\u53F3\u503C" tabindex="-1"><a class="header-anchor" href="#\u5DE6\u503C\u548C\u53F3\u503C" aria-hidden="true">#</a> \u5DE6\u503C\u548C\u53F3\u503C</h2><p>\u5148\u6765\u4E0B\u5B9A\u4E49\uFF1A</p><ul><li><strong>\u5DE6\u503C(loactor valu, lvalue)</strong> \u662F\u5B58\u50A8\u5728\u5185\u5B58\u4E2D\u3001\u6709\u660E\u786E\u5B58\u50A8\u5730\u5740\uFF08\u53EF\u5BFB\u5740\uFF09\u7684\u6570\u636E</li><li><strong>\u53F3\u503C(rvalue)</strong> \u662F\u53EF\u4EE5\u63D0\u4F9B\u6570\u636E\u503C\u7684\u6570\u636E\uFF08\u4E0D\u4E00\u5B9A\u53EF\u4EE5\u5BFB\u5740\uFF0C\u4F8B\u5982\u5B58\u50A8\u4E8E\u5BC4\u5B58\u5668\u4E2D\u7684\u6570\u636E\uFF09\u3002\u540C\u65F6\u53F3\u503C\u53C8\u6709 <strong>\u7EAF\u53F3\u503C(pure rvalue)</strong> \u548C <strong>\u5C06\u4EA1\u503C(eXpiring Value)</strong> \u7684\u5206\u7C7B\u3002</li></ul><p><strong>\u4F8B\u5982</strong>\uFF0C<code>x</code> \u662F\u4E00\u4E2A\u5DE6\u503C\uFF0C\u56E0\u4E3A\u5176\u6709\u660E\u786E\u7684\u5185\u5B58\u5730\u5740\uFF1B<code>3</code> \u662F\u4E00\u4E2A\u7EAF\u53F3\u503C\uFF0C\u56E0\u4E3A\u5176\u4E0D\u5B58\u50A8\u5728\u5185\u5B58\u4E2D\uFF0C\u800C\u662F\u76F4\u63A5\u63D0\u4F9B\u6570\u636E\uFF08\u7684\u4E34\u65F6\uFF09\u503C\u3002</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>  <span class="token comment">// x \u662F\u4E00\u4E2A\u5DE6\u503C\uFF0C3 \u662F\u4E00\u4E2A\u7EAF\u53F3\u503C\uFF08\u5B57\u9762\u91CF\uFF09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>\u4F8B\u5982</strong>\uFF0C\u81EA\u589E\u64CD\u4F5C\u65F6\uFF0C<code>x++</code> \u662F\u4E00\u4E2A\u53F3\u503C\uFF0C<code>++x</code> \u662F\u4E00\u4E2A\u5DE6\u503C\u3002</p><ul><li><code>x++</code> <strong>\u8FD4\u56DE\u4E34\u65F6\u53D8\u91CF\uFF0C\u662F\u4E00\u4E2A\u53F3\u503C</strong>\u3002\u5728\u540E\u7F6E\u81EA\u589E\u64CD\u4F5C\u4E2D\uFF0C<code>x</code> \u7684\u503C\u4F1A\u88AB\u7F16\u8BD1\u5668\u62F7\u8D1D\u4E00\u4EFD\uFF0C\u7136\u540E\u81EA\u589E\uFF0C\u6700\u540E\u8FD4\u56DE\u62F7\u8D1D\u7684\u503C\u3002\u56E0\u6B64\u5BF9 <code>x++</code> \u53D6\u5730\u5740\u4F1A\u62A5\u9519</li><li><code>++x</code> <strong>\u8FD4\u56DE\u81EA\u5DF1\u672C\u8EAB\uFF0C\u662F\u4E00\u4E2A\u5DE6\u503C</strong>\u3002\u5BF9 <code>++x</code> \u53D6\u5730\u5740\u4E0D\u4F1A\u62A5\u9519</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>x<span class="token operator">++</span><span class="token punctuation">;</span>  <span class="token comment">// \u53F3\u503C</span>
<span class="token operator">++</span>x<span class="token punctuation">;</span>  <span class="token comment">// \u5DE6\u503C</span>
<span class="token keyword">int</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token operator">&amp;</span>x<span class="token operator">++</span><span class="token punctuation">;</span>  <span class="token comment">// error: lvalue required as unary &#39;&amp;&#39; operand</span>
<span class="token keyword">int</span><span class="token operator">*</span> q <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token operator">++</span>x<span class="token punctuation">;</span>  <span class="token comment">// ok</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u4F8B\u5982</strong>\uFF0C\u901A\u5E38\u5B57\u9762\u91CF\u90FD\u662F\u53F3\u503C\uFF0C<strong>\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u9664\u5916</strong>\uFF0C\u867D\u7136\u5F88\u5C11\u8FD9\u6837\u505A\uFF0C\u4F46\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u5B58\u50A8\u5230\u7A0B\u5E8F\u4E2D\u5BF9\u6570\u636E\u6BB5\u65F6\uFF0C\u7A0B\u5E8F\u52A0\u8F7D\u5230\u65F6\u5019\u4E5F\u4F1A\u4E3A\u5176\u5206\u914D\u5185\u5B58\u5730\u5740\uFF0C\u56E0\u6B64<strong>\u662F\u5DE6\u503C</strong>\u3002</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">int</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span> <span class="token comment">// lvalue</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>\u4F8B\u5982</strong>\uFF0C\u51FD\u6570\u8FD4\u56DE\u503C</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>std<span class="token double-colon punctuation">::</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    std<span class="token double-colon punctuation">::</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> vec <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span>   <span class="token comment">// 0x16f84b228 </span>
    <span class="token comment">// vec \u5DE6\u503C\uFF0C {1, 2, 3} \u53F3\u503C</span>
    <span class="token keyword">return</span> vec<span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE\u65F6\u62F7\u8D1D\u590D\u5236\u5230 std::vector&lt;int&gt; </span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

std<span class="token double-colon punctuation">::</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> nums<span class="token punctuation">;</span>  <span class="token comment">// 0x16f84b200  \u5DE6\u503C</span>
nums <span class="token operator">=</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">// 0x16f84b200</span>
                        <span class="token comment">// RVO: 0x16f84b228</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u51FD\u6570 <code>func()</code> \u5185\u7684 <code>vec</code> \u662F\u4E00\u4E2A\u4E34\u65F6\u53D8\u91CF\uFF0C\u5728\u51FD\u6570\u7ED3\u675F\u540E\uFF0C <code>vec</code> \u4F1A\u88AB\u62F7\u8D1D\u4E00\u4EFD\u8FD4\u56DE\uFF0C\u7136\u540E\u7ACB\u5373\u9500\u6BC1\uFF0C\u8FD9\u5C31\u4F1A\u9020\u6210\u989D\u5916\u7684\u5F00\u9500</p><p>\u4F46\u662F\uFF0C\u7F16\u8BD1\u5668\u5BF9\u6B64\u8FDB\u884C\u4E86\u9ED8\u8BA4 RVO \u4F18\u5316 (\u7981\u7528\u53EF\u4EE5\u6DFB\u52A0\u7F16\u8BD1\u9009\u9879 <code>-fno-elide-constructors</code>)\uFF0C\u4F1A\u5C06 <code>vec</code> \u8FDB\u884C\u9690\u5F0F\u53F3\u503C\u8F6C\u5316\uFF0C\u76F4\u63A5\u5C06 <code>vec</code> \u7684\u5185\u5BB9\u79FB\u52A8\u5230 <code>nums</code> \u4E2D\uFF0C\u800C\u4E0D\u662F\u62F7\u8D1D\u4E00\u4EFD\uFF0C\u8FD9\u6837\u5C31\u907F\u514D\u4E86\u989D\u5916\u7684\u5F00\u9500\u3002</p><h2 id="\u5DE6\u503C\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#\u5DE6\u503C\u5F15\u7528" aria-hidden="true">#</a> \u5DE6\u503C\u5F15\u7528</h2><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">int</span> val <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">int</span><span class="token operator">&amp;</span> lrval <span class="token operator">=</span> val<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9A\u4E49\u5DE6\u503C\u5F15\u7528\u7684\u65F6\u5019\u9700\u8981\u76F4\u63A5\u521D\u59CB\u5316\uFF0C\u5426\u5219\u4F1A\u62A5\u9519 <code>error: declaration of reference variable &#39;lrval&#39; requires an initializer</code></p><h2 id="\u53F3\u503C\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#\u53F3\u503C\u5F15\u7528" aria-hidden="true">#</a> \u53F3\u503C\u5F15\u7528</h2><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">int</span> val <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token operator">&amp;&amp;</span> rrval <span class="token operator">=</span> std<span class="token double-colon punctuation">::</span><span class="token function">move</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9A\u4E49\u53F3\u503C\u5F15\u7528\u7684\u65F6\u5019\u9700\u8981\u76F4\u63A5\u521D\u59CB\u5316\uFF0C\u5426\u5219\u4F1A\u62A5\u9519 <code>error: declaration of reference variable &#39;lrval&#39; requires an initializer</code></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">PrintRefType</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">&amp;</span>ref<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;lvalue:&quot;</span> <span class="token operator">&lt;&lt;</span>ref<span class="token operator">&lt;&lt;</span> std<span class="token double-colon punctuation">::</span>endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">PrintRefType</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">&amp;&amp;</span>ref<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;rvalue:&quot;</span> <span class="token operator">&lt;&lt;</span>ref<span class="token operator">&lt;&lt;</span> std<span class="token double-colon punctuation">::</span>endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">int</span> val1 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token function">PrintRefType</span><span class="token punctuation">(</span>val1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// output: lvalue:1</span>
    <span class="token function">PrintRefType</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// output: rvalue:2</span>

    <span class="token keyword">int</span><span class="token operator">&amp;&amp;</span> val2 <span class="token operator">=</span> val1<span class="token punctuation">;</span>  <span class="token comment">// error: rvalue reference to type &#39;int&#39; cannot bind to lvalue of type &#39;int&#39;</span>

    <span class="token keyword">int</span><span class="token operator">&amp;&amp;</span> val3 <span class="token operator">=</span> std<span class="token double-colon punctuation">::</span><span class="token function">move</span><span class="token punctuation">(</span>val1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">PrintRefType</span><span class="token punctuation">(</span>val3<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// output: lvalue:1</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>val1</code> \u662F\u4E00\u4E2A\u5DE6\u503C</li><li><code>2</code> \u662F\u4E00\u4E2A\u53F3\u503C</li><li><code>int&amp;&amp; val2 = val1;</code> \u53F3\u503C\u5F15\u7528\u4E0D\u80FD\u5F15\u7528\u5DE6\u503C\uFF0C\u62A5\u9519 <code>error: rvalue reference to type &#39;int&#39; cannot bind to lvalue of type &#39;int&#39;</code></li><li><code>int&amp;&amp; val3 = std::move(val1);</code> \u53EF\u4EE5\u4F7F\u7528 <code>std::move</code> \u5C06\u5DE6\u503C\u8F6C\u5316\u4E3A\u53F3\u503C</li></ul><h2 id="\u79FB\u52A8\u8BED\u4E49" tabindex="-1"><a class="header-anchor" href="#\u79FB\u52A8\u8BED\u4E49" aria-hidden="true">#</a> \u79FB\u52A8\u8BED\u4E49</h2><h2 id="\u5B8C\u7F8E\u8F6C\u53D1" tabindex="-1"><a class="header-anchor" href="#\u5B8C\u7F8E\u8F6C\u53D1" aria-hidden="true">#</a> \u5B8C\u7F8E\u8F6C\u53D1</h2><h2 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h2><ul><li>\u300A\u73B0\u4EE3 C++ \u8BED\u8A00\u6838\u5FC3\u7279\u6027\u89E3\u6790\u300B</li><li>[1] <a href="https://eli.thegreenplace.net/2011/12/15/understanding-lvalues-and-rvalues-in-c-and-c/" target="_blank" rel="noopener noreferrer">Understanding lvalues and rvalues in C and C++</a></li><li>[2] <a href="https://changkun.de/modern-cpp/en-us/03-runtime/#3-3-rvalue-Reference" target="_blank" rel="noopener noreferrer">MODERN C++ TUTORIAL: C++ 11/14/17/20 ON THE FLY(SECOND EDITION) Changkun Ou</a></li></ul>`,27),t=[o];function c(l,i){return s(),a("div",null,t)}var u=n(p,[["render",c],["__file","lvalue_rvalue.html.vue"]]);export{u as default};
